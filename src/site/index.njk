---
layout: layouts/base.njk
---
<h1 class="text-3xl border-b-2">The Uncommon Locals</h1>

<section>
{% for product in products %}
  <div>
    <h2 class="text-lg font-semibold">{{ product.name }}</h2>
    <p>{{ product.description }}</p>
    {% for image in product.images %}
      <img src="{{ image }}" alt="{{ product.name }} {{ loop.index }}" />
    {% endfor %}
    <p>{{ product.amount | priceFormatter(product.currency) }}</p>
    <form action="/api/create-checkout" method="POST">
      <label for="quantity">Quantity:
      <input type="number" min="1" max="5" id="quantity" name="quantity" value="1">
      <input type="hidden" name="sku" value="{{ product.sku }}">

      <button class="p-3 border-4 rounded border-green-200">Buy Now!</button>
    </form>
  </div>
{% endfor %}
</section>

<script src="https://js.stripe.com/v3/"></script>
<script type="text/javascript">
  console.log('Thinking about buying something? Glad to see you in the dev tools!')

  var stripe = Stripe('{{ environment.stripePublishableKey }}');

  // Get all the buttons on the page
  const buttons = document.querySelectorAll('button')
  // Loop over the buttons 
  const clickHandler = buttons.forEach(b => {
    b.addEventListener('click', async event => {
      event.preventDefault()
      const form = new FormData(event.target.form)
      const order = {
        sku: form.get('sku'),
        quantity: Number(form.get('quantity'))
      }

      // the create-checkout serverless function takes the order data
      // and returns a Stripe Checkout sessionId
      const response = await fetch('/api/create-checkout', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(order)
      })
      .then(response => {
        console.log(response)
        return response.json()
      })
      stripe.redirectToCheckout({
      // Make the id field from the Checkout Session creation API response
      // available to this file, so you can provide it as argument here
      // instead of the {{CHECKOUT_SESSION_ID}} placeholder.
      sessionId: response
      }).then(function (result) {
        // If `redirectToCheckout` fails due to a browser or network
        // error, display the localized error message to your customer
        // using `result.error.message`.
      })
    })
  })
</script>
